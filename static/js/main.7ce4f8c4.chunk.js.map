{"version":3,"sources":["p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior_Plus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/Error404.module.css"],"names":["Error404","className","styles","root","to","Message","props","avatar","name","message","time","style","avatar_column","image_wrapper","image","src","alt","description_column","description_container","message_name","message_text","message_time","messageData","HW1","Affair","affair","affair_name","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","e","filterAffairs","deleteAffair","useStyles","makeStyles","theme","container","maxWidth","margin","spacing","width","marginBottom","borderColor","borderWidth","color","rootRed","Greeting","setNameCallback","addUser","error","totalUsers","classes","TextField","clsx","length","label","required","variant","value","onChange","id","Box","display","alignItems","flexDirection","Button","Typography","GreetingContainer","users","addUserCallback","setName","currentTarget","v1","HW3","setUsers","user","prev","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","alert","setChecked","column","blue","disabled","PreJunior","Junior","Junior_Plus","PATH","PRE_JUNIOR","JUNIOR","JUNIOR_PLUS","Routes","path","exact","render","button","backgroundColor","borderRadius","arrow","Header","React","state","setState","Drawer","anchor","open","onClose","List","Object","entries","ListItem","activeClassName","component","NavLink","ListItemText","primary","HW5","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"+QAeeA,MAXf,WACI,OACI,sBAAKC,UAAWC,IAAOC,KAAvB,UACI,sCACA,kDACA,mFACA,cAAC,IAAD,CAAMC,GAAI,IAAV,gI,yBCgBGC,MApBf,SAAiBC,GAAwB,IAC9BC,EAA4BD,EAA5BC,OAAOC,EAAqBF,EAArBE,KAAKC,EAAgBH,EAAhBG,QAAQC,EAAQJ,EAARI,KAC3B,OACI,sBAAKT,UAAWU,IAAMF,QAAtB,UACI,qBAAKR,UAAWU,IAAMC,cAAtB,SACI,qBAAKX,UAAWU,IAAME,cAAtB,SACI,qBAAMZ,UAAWU,IAAMG,MAAOC,IAAKR,EAAQS,IAAI,YAGvD,qBAAKf,UAAWU,IAAMM,mBAAtB,SACI,sBAAKhB,UAAWU,IAAMO,sBAAtB,UACI,qBAAKjB,UAAWU,IAAMQ,aAAtB,SAAqCX,IACrC,qBAAKP,UAAWU,IAAMS,aAAtB,SAAqCX,IACrC,qBAAKR,UAAWU,IAAMU,aAAtB,SAAqCX,aCTnDY,EACM,2EADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QAiCKC,MA9Bf,WACI,OACI,gCACI,uBADJ,cAMI,cAAC,EAAD,CACIhB,OAAQe,EACRd,KAAMc,EACNb,QAASa,EACTZ,KAAMY,IAGV,cAAC,EAAD,CACIf,OAAQe,EACRd,KAAMc,EACNb,QAASa,EACTZ,KAAMY,IAGV,uBAGA,2B,iBCrBGE,MAXf,SAAgBlB,GAEZ,OACI,sBAAKL,UAAWU,IAAMc,OAAtB,UACI,qBAAKxB,UAAWU,IAAMe,YAAtB,SAAoCpB,EAAMmB,OAAOjB,OACjD,8BAAMF,EAAMmB,OAAOE,WACnB,wBAAQC,QALO,kBAAMtB,EAAMuB,qBAAqBvB,EAAMmB,OAAOK,MAK7D,mBCsBGC,MA3Bf,SAAiBzB,GACb,IAAM0B,EAAgB1B,EAAM2B,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIV,OAAQU,EACRN,qBAAsBvB,EAAMuB,sBAFvBM,EAAEL,QAWf,OACI,gCAEKE,EAED,wBAAQJ,QAVD,kBAAMtB,EAAM8B,UAAU,QAU7B,iBACA,wBAAQR,QAVA,kBAAMtB,EAAM8B,UAAU,SAU9B,kBACA,wBAAQR,QAVE,kBAAMtB,EAAM8B,UAAU,WAUhC,oBACA,wBAAQR,QAVD,kBAAMtB,EAAM8B,UAAU,QAU7B,qBCnBNC,EAA8B,CAChC,CAACP,IAAK,EAAGtB,KAAM,QAASmB,SAAU,QAClC,CAACG,IAAK,EAAGtB,KAAM,QAASmB,SAAU,OAClC,CAACG,IAAK,EAAGtB,KAAM,QAASmB,SAAU,OAClC,CAACG,IAAK,EAAGtB,KAAM,OAAQmB,SAAU,QACjC,CAACG,IAAK,EAAGtB,KAAM,aAAcmB,SAAU,WA8C5BW,MA1Bf,WAAgB,IAAD,EACmBC,mBAAsBF,GADzC,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAILO,EApBmB,SAACH,EAAsBE,GAQhD,MAAc,QAAXA,EACSF,EACEA,EAAQE,QAAO,SAAAE,GAAC,OAAIA,EAAEjB,WAAae,KAUzBG,CAAcL,EAASE,GAE/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIT,KAAMU,EACNP,UAAWA,EACXP,qBAViB,SAACC,GAAD,OAAiBW,EATtB,SAACD,EAAsBV,GAC/C,OAAOU,EAAQE,QAAO,SAAAE,GAAC,OAAIA,EAAEd,MAAOA,KAQqBgB,CAAaN,EAASV,OAavE,uBAGA,2B,iDC1CNiB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAU,CACNC,SAAS,IACTC,OAAQH,EAAMI,QAAQ,IAE1BlD,KAAM,CACFmD,MAAM,IACNC,aAAaN,EAAMI,QAAQ,GAC3B,2BAA4B,CACxBG,YAAa,QACbC,YAAa,GAEjB,mCAAoC,CAChCD,YAAa,MACbC,YAAa,GAGjB,iCAAkC,CAC9BD,YAAa,SAEjB,UAAW,CACPE,MAAO,OACP,gBAAiB,CACbA,MAAO,WAInBC,QAAS,CACL,sBAAuB,CACnBD,MAAO,YA4BJE,EAvB+B,SAAC,GAEzC,IADDpD,EACA,EADAA,KAAMqD,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAElCC,EAAUlB,IAChB,OACI,sBAAK9C,UAAWgE,EAAQf,UAAxB,UACI,cAACgB,EAAA,EAAD,CACIjE,UAAWkE,YAAKF,EAAQ9D,KAAT,eAAiB8D,EAAQN,SAAWnD,EAAK4D,SACxDC,MAAON,EACPO,UAAQ,EACRC,QAAQ,WACRC,MAAOhE,EACPiE,SAAUZ,EACVa,GAAG,8BAEP,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,WAAWC,cAAc,SAAxD,UACI,cAACC,EAAA,EAAD,CAAQnD,QAASkC,EAASS,QAAS,WAAnC,iBACA,cAACS,EAAA,EAAD,UAAahB,W,SC3BdiB,EA3BiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClE5C,mBAAiB,IADiD,mBACnF/B,EADmF,KAC7E4E,EAD6E,OAEhE7C,mBAAiB,uHAF+C,mBAEnFwB,EAFmF,KAcpFC,GAdoF,KAcvEkB,EAAMd,QAEzB,OACI,cAAC,EAAD,CACI5D,KAAMA,EACNqD,gBAfgB,SAACjB,GACrBwC,EAAQxC,EAAEyC,cAAcb,QAepBV,QAbQ,WACTtD,EAAK4D,SACJe,EAAgB,CAACrD,IAAIwD,cAAM9E,SAC3B4E,EAAQ,MAWRrB,MAAOA,EACPC,WAAYA,KCJTuB,MAvBf,WAAgB,IAAD,EACehD,mBAAqB,IADpC,mBACJ2C,EADI,KACGM,EADH,KAOX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBN,MAAOA,EAAOC,gBAVjB,SAACM,GACrBD,GAAS,SAAAE,GAAI,4BAAOA,GAAP,CAAaD,UAWtB,uBAGA,2B,iCC8BGE,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEnB,EAOH,EAPGA,SAAUoB,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZhC,EAKH,EALGA,MACA9D,EAIH,EAJGA,UAAW+F,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMC,IAAEpC,MAAR,YAAiBiC,GAAgC,IACnEI,EAAmB,UAAMD,IAAEE,WAAR,YAAsBpG,GAAwB,IAEvE,OACI,qCACI,mCACI2F,KAAM,OACNnB,SArBa,SAAC7B,GACtB6B,GACGA,EAAS7B,GAEZiD,GAAgBA,EAAajD,EAAEyC,cAAcb,QAkBrCsB,WAhBe,SAAClD,GACxBkD,GAAcA,EAAWlD,GAEzBmD,GACa,UAAVnD,EAAE0D,KACFP,KAYK9F,UAAWmG,GAEPH,IAEPlC,GAAS,sBAAM9D,UAAWiG,EAAjB,SAAsCnC,Q,qCC3B7CwC,GAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKvG,EAGR,EAHQA,UACFgG,EAEN,mCACKQ,EAAc,UAAMD,EAAML,KAAEK,IAAML,KAAEO,QAAtB,YAAiCzG,GAErD,OACI,oCACIA,UAAWwG,GACPR,K,oBCqBDU,GA/ByC,SAAC,GASpD,EAPGf,KAOF,IANEnB,EAMH,EANGA,SAAUmC,EAMb,EANaA,gBACV3G,EAKH,EALGA,UACA4G,GAIH,EALcb,cAKd,EAJGa,UAEGZ,EAEN,4FAMKG,EAAmB,UAAMD,KAAEW,SAAR,YAAoB7G,GAAwB,IAErE,OACI,kCACI,mCACI2F,KAAM,WACNnB,SAXa,SAAC7B,GACtB6B,GAAYA,EAAS7B,GACrBgE,GAAmBA,EAAgBhE,EAAEyC,cAAc0B,UAU3C9G,UAAWmG,GAEPH,IAEPY,GAAY,sBAAM5G,UAAWkG,KAAEH,cAAnB,SAAmCa,QC0C7CG,OAzEf,WAAgB,IAAD,EACazE,mBAAiB,IAD9B,mBACJ0E,EADI,KACEC,EADF,KAELnD,EAAQkD,EAAO,GAAK,QAEpBE,EAAY,WACVpD,EACAqD,MAAM,gFAENA,MAAMH,IARH,EAYmB1E,oBAAkB,GAZrC,mBAYJwE,EAZI,KAYKM,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAKpH,UAAWkG,IAAEmB,OAAlB,UACI,cAAC,EAAD,CACI9C,MAAOyC,EACPpB,aAAcqB,EACdnB,QAASoB,EACTpD,MAAOA,IAIX,cAAC,EAAD,CACI9D,UAAWkG,IAAEoB,OAKjB,cAAC,GAAD,sBAIA,cAAC,GAAD,CACIf,KAAG,EACH5E,QAASuF,EAFb,qBAOA,cAAC,GAAD,CAAaK,UAAQ,EAArB,sBAMA,cAAC,GAAD,CACIT,QAASA,EACTH,gBAAiBS,EAFrB,wBAQA,cAAC,GAAD,CAAeN,QAASA,EAAStC,SA/CxB,SAAC7B,GAAD,OAAsCyE,EAAWzE,EAAEyC,cAAc0B,eAkD9E,uBAKA,2BCvDGU,OAbf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,QCVCC,GAAQ,WACjB,OACI,0CCFKC,GAAa,WACtB,OACI,+CCGKC,GAAO,CAChBC,WAAY,cACZC,OAAQ,UACRC,YAAa,gBAmBFC,OAhBf,WACI,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAU/H,GAAIwH,GAAKC,gBAEzD,cAAC,IAAD,CAAOI,KAAML,GAAKC,WAAYM,OAAQ,kBAAM,cAAC,GAAD,OAC5C,cAAC,IAAD,CAAOF,KAAML,GAAKE,OAAQK,OAAQ,kBAAM,cAAC,GAAD,OACxC,cAAC,IAAD,CAAOF,KAAML,GAAKG,YAAaI,OAAQ,kBAAM,cAAC,GAAD,OAE7C,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,EAAD,a,oBCZ/BpF,GAAYC,YAAW,CACzBoF,OAAS,CACL9E,MAAM,OACN+E,gBAAgB,OAChBC,aAAa,EACb,iBAAiB,CACb5E,MAAM,SAGd6E,MAAM,CACF7E,MAAM,UAqCC8E,OAjCf,WACI,IAAMvE,EAAUlB,KADF,EAEY0F,IAAMlG,UAAkB,GAFpC,mBAEPmG,EAFO,KAEAC,EAFA,KAGd,OACI,gCACQ,cAAC5D,EAAA,EAAD,CAAQ9E,UAAWgE,EAAQmE,OAAQxG,QAAS,kBAAI+G,GAAUD,IAA1D,SACI,cAAC,KAAD,CAAmBzI,UAAWgE,EAAQsE,UAE1C,cAACK,EAAA,EAAD,CAAUC,OAAQ,MAAOC,KAAMJ,EAAOK,QAAS,kBAAIJ,GAAS,IAA5D,SACI,8BACI,cAACK,EAAA,EAAD,UAEQC,OAAOC,QAAQtB,IAAM1F,KAAI,YAAkB,IAAD,mBAAfoE,EAAe,KAAX9B,EAAW,KACtC,OACQ,cAAC2E,EAAA,EAAD,CACIf,QAAM,EACNgB,gBAAiB,eACjBC,UAAWC,IACXlJ,GAAIoE,EACJ5C,QAAS,kBAAI+G,GAAS,IAL1B,SAOI,cAACY,EAAA,EAAD,CAAcC,QAASlD,KANXA,gBCrB7CmD,OAdf,WACI,OACI,8BACI,eAAC,IAAD,WAEI,cAAC,GAAD,IAEA,cAAC,GAAD,UCUDC,OAdf,WACI,OACI,qBAAKzJ,UAAWkG,IAAEuD,IAAlB,SAMI,cAAC,GAAD,OCJQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAAS7B,OACT,cAAC,GAAD,IACI8B,SAASC,eAAe,SDmIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAA1G,GACH2G,QAAQ3G,MAAMA,EAAMtD,a,mBEhJpCkK,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,cAAgB,+BAA+B,mBAAqB,oCAAoC,sBAAwB,uCAAuC,aAAe,8BAA8B,aAAe,gC,mBCAvUD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,YAAc,+B,mBCAjED,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,2BAA2B,SAAW,wB,mBCA9HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,yBAAyB,aAAa,kC,mBCArGD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,KAAO,yB","file":"static/js/main.7ce4f8c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={styles.root}>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n            <Link to={'/'}>Вернуться на главную</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\n\r\nimport style from './Message.module.css'\r\n\r\nimport {messageDataType} from \"./HW1\";\r\n\r\nfunction Message(props:messageDataType) {\r\n    const {avatar,name,message,time} = props\r\n    return (\r\n        <div className={style.message}>\r\n            <div className={style.avatar_column}>\r\n                <div className={style.image_wrapper}>\r\n                    <img  className={style.image} src={avatar} alt=\"123\"/>\r\n                </div>\r\n            </div>\r\n            <div className={style.description_column}>\r\n                <div className={style.description_container}>\r\n                    <div className={style.message_name}>{name}</div>\r\n                    <div className={style.message_text}>{message}</div>\r\n                    <div className={style.message_time}>{time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nexport type messageDataType = {\r\n    avatar:string,\r\n    name:string,\r\n    message:string,\r\n    time:string\r\n}\r\n\r\nconst messageData:messageDataType = {\r\n    avatar: 'https://cs5.pikabu.ru/post_img/big/2015/03/25/5/1427266313_681511633.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from './HW2';\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id : number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)// need to fix\r\n    return (\r\n        <div className={style.affair}>\r\n            <div className={style.affair_name}>{props.affair.name}</div>\r\n            <div>{props.affair.priority}</div>\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React, {Dispatch, SetStateAction} from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairsType, AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairsType\r\n    // setFilter: Dispatch<SetStateAction<FilterType>>\r\n    setFilter:(filter:FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all') // need to fix\r\n    const setHigh = () => props.setFilter('high')\r\n    const setMiddle = () => props.setFilter('middle')\r\n    const setLow = () => props.setFilter('low')\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\nexport type AffairsType = Array<AffairType>\r\n\r\n// constants\r\nconst defaultAffairs: AffairsType = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairsType, filter: FilterType): AffairsType => { // need to fix any\r\n/*    if (filter === 'high') {\r\n        return affairs.filter(e => e.priority === 'high')\r\n    } else if (filter === 'low') {\r\n        return affairs.filter(e => e.priority === 'low')\r\n    } else if (filter === 'middle') {\r\n        return affairs.filter(e => e.priority === 'middle')\r\n    } else return affairs*/\r\n    if(filter === 'all') {\r\n        return  affairs\r\n    } else return affairs.filter(e => e.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: AffairsType, _id: number): AffairsType => { // need to fix any\r\n    return affairs.filter(e => e._id!== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairsType>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport {Box, Button, makeStyles, TextField, Typography} from '@material-ui/core';\r\nimport clsx from 'clsx'\r\n\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string// need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n\r\n\r\n// презентационная компонента (для верстальщика)\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container:{\r\n        maxWidth:300,\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        width:300,\r\n        marginBottom:theme.spacing(1),\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'green',\r\n            borderWidth: 2,\r\n        },\r\n        '& input:invalid:focus + fieldset': {\r\n            borderColor: 'red',\r\n            borderWidth: 2,\r\n        },\r\n\r\n        '& input:valid:focus + fieldset': {\r\n            borderColor: 'green',\r\n        },\r\n        '& label': {\r\n            color: '#555',\r\n            '&.Mui-focused': {\r\n                color: 'green',\r\n            }\r\n        },\r\n    },\r\n    rootRed: {\r\n        '& label.Mui-focused': {\r\n            color: 'red',\r\n        },\r\n    }\r\n}));\r\n\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.container}>\r\n            <TextField\r\n                className={clsx(classes.root, {[classes.rootRed]: !name.length})}\r\n                label={error}\r\n                required\r\n                variant=\"outlined\"\r\n                value={name}\r\n                onChange={setNameCallback}\r\n                id=\"validation-outlined-input\"\r\n            />\r\n            <Box display='flex' alignItems='flex-end' flexDirection='column'>\r\n                <Button onClick={addUser} variant={'outlined'}>add</Button>\r\n                <Typography>{totalUsers}</Typography>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\nimport {v1} from 'uuid';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (user:UserType) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('Введите пользователя') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n    }\r\n    const addUser = () => {\r\n        if(name.length){\r\n            addUserCallback({_id:v1(), name})\r\n            setName('')\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string// need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (user: UserType) => { // need to fix any\r\n        setUsers(prev=> [...prev, user]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red// пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nexport const Junior =() => {\r\n    return (\r\n        <div>\r\n            JUNIOR\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Junior_Plus =() => {\r\n    return (\r\n        <div>\r\n            JUNIOR_PLUS\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Error404 from './pages/Error404';\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport PreJunior from './pages/PreJunior';\r\nimport {Junior} from './pages/Junior';\r\nimport {Junior_Plus} from './pages/Junior_Plus';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <Junior_Plus/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {PATH} from './Routes';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    button : {\r\n        width:'100%',\r\n        backgroundColor:'#444',\r\n        borderRadius:0,\r\n        '&:hover $arrow':{\r\n            color:'#999'\r\n        }\r\n    },\r\n    arrow:{\r\n        color:'#fff'\r\n    }\r\n});\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState<boolean>(false);\r\n    return (\r\n        <div>\r\n                <Button className={classes.button} onClick={()=>setState(!state)}>\r\n                    <ArrowDropDownIcon className={classes.arrow}/>\r\n                </Button>\r\n                <Drawer   anchor={'top'} open={state} onClose={()=>setState(false)}>\r\n                    <div>\r\n                        <List>\r\n                            {\r\n                                Object.entries(PATH).map(([key,value]) => {\r\n                                    return (\r\n                                            <ListItem\r\n                                                button key={key}\r\n                                                activeClassName={'Mui-selected'}\r\n                                                component={NavLink}\r\n                                                to={value}\r\n                                                onClick={()=>setState(false)}\r\n                                            >\r\n                                                <ListItemText primary={key}/>\r\n                                            </ListItem>\r\n                                )\r\n                            })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                </Drawer>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n\r\n                <Header/>\r\n\r\n                <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n// import HW4 from '../../../p2-homeworks/h4/HW4';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n{/*            <div>react homeworks:</div>\r\n                        <HW1/>\r\n                        <HW2/>\r\n            <HW3/>\r\n            <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n<App/>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__344yk\",\"avatar_column\":\"Message_avatar_column__2zt8r\",\"image_wrapper\":\"Message_image_wrapper__hZ_0D\",\"description_column\":\"Message_description_column__3Oxwf\",\"description_container\":\"Message_description_container__gTpRZ\",\"message_name\":\"Message_message_name__8VqpE\",\"message_time\":\"Message_message_time__33VTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affairs_affair__jGQnQ\",\"affair_name\":\"Affairs_affair_name__1adBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2JSRB\",\"errorInput\":\"SuperInputText_errorInput__229UA\",\"error\":\"SuperInputText_error__tZ5Yr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1NG3p\",\"column\":\"HW4_column__3uxMx\",\"testSpanError\":\"HW4_testSpanError__3_zQg\",\"myButton\":\"HW4_myButton__3xVCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3Rnbc\",\"red\":\"SuperButton_red__2wiMH\",\"mui-button\":\"SuperButton_mui-button__3jkGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1eQa4\",\"spanClassName\":\"SuperCheckbox_spanClassName__1RfSE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ECjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error404_root__1d4e_\"};"],"sourceRoot":""}